From 33b428a4024fa05cf6a5bdd54b623da6628cf579 Mon Sep 17 00:00:00 2001
From: Yassin Nurmahomed <yassin.nurmahomed@ucglobalprograms.org>
Date: Wed, 16 Aug 2017 18:41:16 +0200
Subject: [PATCH 3/3] Delete CheckinController

Removed CheckinController that was used to load data into $rootScope,the same data is loaded
inside controllers removing dependency on $rootScrope.
Now most of the screens can be refreshed without any problems except clinical services forms.
---
 app/clinic/controllers/dashboardController.js      |  79 ++--
 app/clinic/controllers/patientCurrentController.js | 113 +++--
 app/clinic/controllers/patientHeaderController.js  |   6 +-
 app/clinic/controllers/patientSummaryController.js | 474 +++++++++++----------
 app/clinic/index.html                              |   1 -
 app/clinic/views/patient-consultation.html         |   2 +-
 app/clinic/views/patient-current.html              |   4 +-
 app/clinic/views/patient-summary.html              |  18 +-
 app/common/patient/header/views/header.html        |   6 +-
 .../patientSimplifiedPrescriptionController.js     |  24 +-
 .../controllers/checkinController.js               |  34 --
 app/pharmacy/controllers/dashboardController.js    |   2 -
 app/pharmacy/index.html                            |   1 -
 app/registration/index.html                        |   1 -
 app/service-form/init.js                           |   2 +-
 app/social/controllers/dashboardController.js      |  64 ++-
 app/social/index.html                              |   1 -
 app/social/views/dashboard.html                    |   2 +-
 app/vitals/controllers/dashboardController.js      |  64 ++-
 app/vitals/index.html                              |   1 -
 app/vitals/init.js                                 |  30 +-
 app/vitals/views/dashboard.html                    |   2 +-
 22 files changed, 511 insertions(+), 420 deletions(-)
 delete mode 100755 app/patient-details/controllers/checkinController.js

diff --git a/app/clinic/controllers/dashboardController.js b/app/clinic/controllers/dashboardController.js
index 4fe2759..a5d859e 100755
--- a/app/clinic/controllers/dashboardController.js
+++ b/app/clinic/controllers/dashboardController.js
@@ -1,31 +1,62 @@
-'use strict';
+(function () {
+  'use strict';
 
-angular.module('clinic')
-  .controller('DashboardController', ["$rootScope", "$scope", "$location", "$stateParams", "$filter", "patientService",
-    "alertService",
-    function ($rootScope, $scope, $location, $stateParams, $filter, patientService, alertService) {
-            var patientUuid;
+  angular
+    .module('clinic')
+    .controller('DashboardController', DashboardController);
 
-            init();
-            function init() {
-                patientUuid = $stateParams.patientUuid;
+  DashboardController.$inject = ['$rootScope', '$scope', '$location', '$stateParams', '$filter', 'patientService',
+    'alertService', 'visitService', 'commonService'];
 
-                patientService.getPatient(patientUuid).then(function (patient) {
-                    $rootScope.patient = patient;
-                });
+  /* @ngInject */
+  function DashboardController($rootScope, $scope, $location, $stateParams, $filter, patientService, alertService,
+    visitService, commonService) {
+
+    var dateUtil = Bahmni.Common.Util.DateUtil;
+
+    $scope.patientUUID = $stateParams.patientUuid;
+
+    activate();
+
+    ////////////////
+
+    function activate() {
+      patientService.getPatient($scope.patientUUID).then(function (patient) {
+        $rootScope.patient = patient;
+      });
+      visitService.search({patient: $scope.patientUuid, v: "full"})
+        .success(function (data) {
+          var nonRetired = commonService.filterRetired(data.results);
+          //in case the patient has an active visit
+          if (!_.isEmpty(nonRetired)) {
+            var lastVisit = _.maxBy(nonRetired, 'startDatetime');
+            var now = dateUtil.now();
+            //is last visit todays
+            if (dateUtil.parseDatetime(lastVisit.startDatetime) <= now &&
+              dateUtil.parseDatetime(lastVisit.stopDatetime) >= now) {
+              $scope.hasVisitToday = true;
+              $scope.todayVisit = lastVisit;
+            } else {
+              $scope.hasVisitToday = false;
             }
+          }
+        });
+    }
+
+    $scope.linkSearch = function() {
+      $location.url("/search"); // path not hash
+    };
+
+    $scope.linkPatientDetail = function() {
+      $location.url("/patient/detail/" + $scope.patientUUID); // path not hash
+    };
 
-            $scope.linkSearch = function() {
-                $location.url("/search"); // path not hash
-            };
+    $scope.getAlerts = function () {
+      alertService.get($scope.patientUUID).success(function (data) {
+        $scope.flags = data.flags;
+      });
+    };
+  }
 
-            $scope.linkPatientDetail = function() {
-                $location.url("/patient/detail/" + patientUuid); // path not hash
-            };
+})();
 
-            $scope.getAlerts = function () {
-                alertService.get(patientUuid).success(function (data) {
-                    $scope.flags = data.flags;
-                });
-            };
-    }]);
diff --git a/app/clinic/controllers/patientCurrentController.js b/app/clinic/controllers/patientCurrentController.js
index a06c2f7..062a209 100755
--- a/app/clinic/controllers/patientCurrentController.js
+++ b/app/clinic/controllers/patientCurrentController.js
@@ -1,54 +1,73 @@
-'use strict';
 (function () {
-  angular.module('clinic')
-    .controller('PatientCurrentController', ["$scope", "$rootScope", "$stateParams", "encounterService", "observationsService",
-      function ($scope, $rootScope, $stateParams, encounterService, obsService) {
+  'use strict';
 
-        var patientUuid= $stateParams.patientUuid;
-        $scope.initLabResults = initLabResults();
-        $scope.initVitals = initVitals();
+  angular
+    .module('clinic')
+    .controller('PatientCurrentController', PatientCurrentController);
 
+  PatientCurrentController.$inject = ['$scope', '$rootScope', '$stateParams', 'encounterService', 'observationsService', 'patientService'];
 
-        function filterGroupReverseEncounters(data, element) {
+  /* @ngInject */
+  function PatientCurrentController($scope, $rootScope, $stateParams, encounterService, observationsService, patientService) {
+
+    var patientUUID = $stateParams.patientUuid;
+    var patient = {};
+
+    $scope.initLabResults = initLabResults;
+    $scope.initVitals = initVitals;
+    $scope.isObject = _.isObject;
+
+    activate();
+
+    ////////////////
+
+    function activate() {
+      getPatient()
+        .then(function (p) { patient = p; })
+        .then(initVitals)
+        .then(initLabResults);
+    }
+
+    function initLabResults() {
+      return encounterService.getEncountersForEncounterType(patientUUID, Bahmni.Common.Constants.LAB_ENCOUNTER_TYPE_UUID).success(function (data) {
+        return filterGroupReverseEncounters(data, "labResults");
+      });
+    }
+
+    function initVitals() {
+      var conceptsUuids =
+      [Bahmni.Common.Constants.SYSTOLIC_BLOOD_PRESSURE, Bahmni.Common.Constants.DIASTOLIC_BLOOD_PRESSURE ,
+        Bahmni.Common.Constants.WEIGHT_KG, Bahmni.Common.Constants.HEIGHT_CM, Bahmni.Common.Constants.TEMPERATURE,
+        Bahmni.Common.Constants.FREQUENCIA_CARDIACA,Bahmni.Common.Constants.RESPIRATORY_RATE];
+      return filterGroupReverseObs(conceptsUuids, "vitals");
+    }
+
+    function filterGroupReverseEncounters(data, element) {
+      var nonRetired = encounterService.filterRetiredEncoounters(data.results);
+      var grouped = _.groupBy(nonRetired, function (element) {
+        return Bahmni.Common.Util.DateUtil.getDate(element.encounterDatetime);
+      });
+      $scope[element] = _.values(grouped).reverse();
+    }
+
+    function filterGroupReverseObs(concepts, element) {
+      return encounterService.getEncountersForEncounterType(patientUUID,
+        (patient.age.years >= 15) ? Bahmni.Common.Constants.ADULT_FOLLOWUP_ENCOUTER_UUID : Bahmni.Common.Constants.CHILD_FOLLOWUP_ENCOUNTER_UUID)
+        .success(function (data) {
           var nonRetired = encounterService.filterRetiredEncoounters(data.results);
-          var grouped = _.groupBy(nonRetired, function (element) {
-            return Bahmni.Common.Util.DateUtil.getDate(element.encounterDatetime);
+          _.forEach(nonRetired, function (encounter) {
+            encounter.obs = observationsService.filterByList(encounter.obs, concepts);
           });
-          $scope[element] = _.values(grouped).reverse();
-        };
-
-        function filterGroupReverseObs(concepts, element) {
-          encounterService.getEncountersForEncounterType(patientUuid,
-            ($scope.patient.age.years >= 15) ? Bahmni.Common.Constants.ADULT_FOLLOWUP_ENCOUTER_UUID : Bahmni.Common.Constants.CHILD_FOLLOWUP_ENCOUNTER_UUID)
-            .success(function (data) {
-              var nonRetired = encounterService.filterRetiredEncoounters(data.results);
-              _.forEach(nonRetired, function (encounter) {
-                encounter.obs = obsService.filterByList(encounter.obs, concepts);
-              });
-              var filtered = _.filter(nonRetired, function (encounter) {
-                return !_.isEmpty(encounter.obs);
-              });
-              $scope[element] = filtered.reverse();
-            });
-        };
-
-        function initLabResults() {
-          encounterService.getEncountersForEncounterType(patientUuid, Bahmni.Common.Constants.LAB_ENCOUNTER_TYPE_UUID).success(function (data) {
-            filterGroupReverseEncounters(data, "labResults");
+          var filtered = _.filter(nonRetired, function (encounter) {
+            return !_.isEmpty(encounter.obs);
           });
-        };
-
-        function initVitals() {
-          var conceptsUuids =
-          [Bahmni.Common.Constants.SYSTOLIC_BLOOD_PRESSURE, Bahmni.Common.Constants.DIASTOLIC_BLOOD_PRESSURE ,
-            Bahmni.Common.Constants.WEIGHT_KG, Bahmni.Common.Constants.HEIGHT_CM, Bahmni.Common.Constants.TEMPERATURE,
-            Bahmni.Common.Constants.FREQUENCIA_CARDIACA,Bahmni.Common.Constants.RESPIRATORY_RATE];
-          filterGroupReverseObs(conceptsUuids, "vitals");
-        };
-
-        $scope.isObject = function (value) {
-          return _.isObject(value);
-        };
-
-      }]);
-})();
+          $scope[element] = filtered.reverse();
+        });
+    }
+
+    function getPatient() {
+      return patientService.getPatient(patientUUID);
+    }
+}
+
+})();
\ No newline at end of file
diff --git a/app/clinic/controllers/patientHeaderController.js b/app/clinic/controllers/patientHeaderController.js
index 477e0b8..b632f17 100755
--- a/app/clinic/controllers/patientHeaderController.js
+++ b/app/clinic/controllers/patientHeaderController.js
@@ -47,9 +47,8 @@ angular.module('clinic')
         var adultFollowupEncounterUuid = Bahmni.Common.Constants.adultFollowupEncounterUuid;
         var childFollowupEncounterUuid = Bahmni.Common.Constants.childFollowupEncounterUuid;
 
-        var patient = commonService.deferPatient($rootScope.patient);
-
-        encounterService.getEncountersForEncounterType(patient.uuid,
+        patientService.getPatient(patientUuid).then(function (patient) {
+          encounterService.getEncountersForEncounterType(patient.uuid,
           (patient.age.years >= 15) ? adultFollowupEncounterUuid : childFollowupEncounterUuid)
           .success(function (data) {
             patientPrescriptions = commonService.filterGroupReverseFollowupObs(conceptsTreatment, data.results);
@@ -62,6 +61,7 @@ angular.module('clinic')
             //TODO: Add infant and pregnant women
             var encounterType = ((patient.age.years >= 15) ? adultFollowupEncounterUuid : childFollowupEncounterUuid);
           });
+        });
       };
 
       var filterObs = function (data, concepts) {
diff --git a/app/clinic/controllers/patientSummaryController.js b/app/clinic/controllers/patientSummaryController.js
index 5cc1743..696a596 100755
--- a/app/clinic/controllers/patientSummaryController.js
+++ b/app/clinic/controllers/patientSummaryController.js
@@ -1,241 +1,249 @@
+(function () {
   'use strict';
 
-    angular.module('clinic')
-        .controller('PatientSummaryController', PatientSummaryController);
-
-    PatientSummaryController.$inject = ['$rootScope', '$stateParams',
-                        'encounterService', 'observationsService', 'commonService', 'orderService', '$filter', 'spinner',
-                        'prescriptionService'];
-
-    function PatientSummaryController($rootScope, $stateParams, encounterService,
-                    observationsService, commonService, orderService, $filter, spinner, prescriptionService) {
-        
-        var patientUuid = $stateParams.patientUuid;
-        var vm = this;
-
-        vm.displayLimits = [
-            {id: 1, display: "All", value: -1},
-            {id: 2, display: "2", value: 2},
-            {id: 3, display: "4", value: 4},
-            {id: 4, display: "6", value: 6},
-            {id: 5, display: "12", value: 12},
-            {id: 6, display: "24", value: 24}
-        ];
-
-        vm.displayLimit = _.find(vm.displayLimits, function (item) {
-            return item.value == $rootScope.defaultDisplayLimit;
+  angular.module('clinic')
+    .controller('PatientSummaryController', PatientSummaryController);
+
+  PatientSummaryController.$inject = ['$rootScope', '$stateParams', 'encounterService', 'observationsService',
+    'commonService', 'orderService', '$filter', 'spinner', 'prescriptionService', 'patientService'];
+
+  /* @ngInject */
+  function PatientSummaryController($rootScope, $stateParams, encounterService, observationsService, commonService,
+                                    orderService, $filter, spinner, prescriptionService, patientService) {
+
+    var patientUuid = $stateParams.patientUuid;
+    var patient = {};
+    var vm = this;
+
+    vm.displayLimits = [
+      {id: 1, display: "All", value: -1},
+      {id: 2, display: "2", value: 2},
+      {id: 3, display: "4", value: 4},
+      {id: 4, display: "6", value: 6},
+      {id: 5, display: "12", value: 12},
+      {id: 6, display: "24", value: 24}
+    ];
+
+    vm.displayLimit = _.find(vm.displayLimits, function (item) {
+      return item.value == $rootScope.defaultDisplayLimit;
+    });
+
+    vm.filterDate = filterDate;
+    vm.isObject = isObject;
+    vm.updateDisplayLimit = updateDisplayLimit;
+
+    activate();
+
+    ////////////////
+
+    function activate() {
+      updateDisplayLimit(vm.displayLimit);
+    }
+
+    function dropSizeToLimit(list) {
+      if (_.isUndefined(list)) return;
+      var size = _.size(list);
+
+      if (vm.displayLimit.value === -1) return list;
+
+      if (vm.displayLimit.value > size) return list;
+
+      return _.slice(list, 0, vm.displayLimit.value);
+    }
+
+    function updateDisplayLimit(item) {
+      spinner.forPromise(getPatient()
+        .then(function (p) { patient = p; })
+        .then(initVisitHistory)
+        .then(initLabResults)
+        .then(initDiagnosis)
+        .then(initICD10Diagnosis)
+        .then(initPharmacyPickups)
+        .then(initPharmacyPickupsNew)
+        .then(initPrescriptions)
+        .then(initAllergies)
+        .then(initVitals));
+    };
+
+    function initVisitHistory() {
+      return encounterService.getEncountersOfPatient(patientUuid).success(function (data) {
+        vm.visits = dropSizeToLimit(commonService.filterGroupReverse(data));
+      });
+    }
+
+    function initLabResults() {
+      var labEncounterUuid = "e2790f68-1d5f-11e0-b929-000c29ad1d07";//TODO: create in configuration file
+
+      return encounterService.getEncountersForEncounterType(patientUuid, labEncounterUuid).success(function (data) {
+        vm.labs = commonService.filterGroupReverse(data);
+      });
+    }
+
+    function initDiagnosis() {
+      var concepts = ["e1cdd38c-1d5f-11e0-b929-000c29ad1d07",
+        "e1e2b07c-1d5f-11e0-b929-000c29ad1d07",
+        "e1d608cc-1d5f-11e0-b929-000c29ad1d07",
+        "e1e5232a-1d5f-11e0-b929-000c29ad1d07",
+        "e1e529a6-1d5f-11e0-b929-000c29ad1d07",
+        "e1d2984a-1d5f-11e0-b929-000c29ad1d07",
+        "e1dac2ae-1d5f-11e0-b929-000c29ad1d07",
+        "e1dac3da-1d5f-11e0-b929-000c29ad1d07",
+        "e1dac574-1d5f-11e0-b929-000c29ad1d07",
+        "e1e2530c-1d5f-11e0-b929-000c29ad1d07",
+        "e1e52898-1d5f-11e0-b929-000c29ad1d07",
+        "e1e29fa6-1d5f-11e0-b929-000c29ad1d07",
+        "e1daf922-1d5f-11e0-b929-000c29ad1d07",
+        "e1dce93a-1d5f-11e0-b929-000c29ad1d07"
+      ];//TODO: create in configuration file
+
+      return observationsService.findAll(patientUuid).success (function (data) {
+        var filtered = observationsService.filterByList(data.results, concepts);//TODO: filter must be dome in backend system
+        var ordered = _.sortBy(filtered, function (obs) {
+          return obs.obsDatetime;
         });
+        vm.diagnosis = dropSizeToLimit(ordered);
+      });
+    }
+
+    function initICD10Diagnosis() {
+      var concept = "e1eb7806-1d5f-11e0-b929-000c29ad1d07";//TODO: create in configuration file
+
+      return observationsService.get(patientUuid, concept).success (function (data) {
+        var filtered = commonService.filterRetired(data.results);//TODO: filter must be dome in backend system
+        vm.icdDiagnosis = dropSizeToLimit(filtered);
+      });
+    }
+
+    function initPharmacyPickups() {
+      var pharmacyEncounterUuid = "e279133c-1d5f-11e0-b929-000c29ad1d07";//TODO: create in configuration file
+
+      return encounterService.getEncountersForEncounterType(patientUuid, pharmacyEncounterUuid).success(function (data) {
+        vm.pickups = dropSizeToLimit(commonService.filterGroupReverse(data));
+      });
+    }
+
+    function initPharmacyPickupsNew() {
+      var patientUuid = $stateParams.patientUuid;
+      var pharmacyEncounterTypeUuid = "18fd49b7-6c2b-4604-88db-b3eb5b3a6d5f";
+
+      return encounterService.getEncountersForEncounterType(patientUuid, pharmacyEncounterTypeUuid).success(function (data) {
+        var nonRetired = prepareDispenses(commonService.filterReverse(data));
+        vm.newPickups = dropSizeToLimit(nonRetired);
+
+      });
+    }
 
-        vm.updateDisplayLimit = updateDisplayLimit;
-        vm.initVisitHistory = initVisitHistory;
-        vm.initLabResults = initLabResults;
-        vm.initDiagnosis = initDiagnosis;
-        vm.initICD10Diagnosis = initICD10Diagnosis;
-        vm.initPharmacyPickups = initPharmacyPickups;
-        vm.initPharmacyPickupsNew = initPharmacyPickupsNew;
-        vm.initPrescriptions = initPrescriptions;
-        vm.initAllergies = initAllergies;
-        vm.initVitals = initVitals;
-
-        var dropSizeToLimit = function (list) {
-            if (_.isUndefined(list)) return;
-            var size = _.size(list);
-
-            if (vm.displayLimit.value === -1) return list;
-
-            if (vm.displayLimit.value > size) return list;
-
-            return _.slice(list, 0, vm.displayLimit.value);
-        };
-
-        function updateDisplayLimit(item) {
-            spinner.forPromise(initVisitHistory()
-                .then(initLabResults())
-                .then(initDiagnosis())
-                .then(initICD10Diagnosis())
-                .then(initPharmacyPickups())
-                .then(initPharmacyPickupsNew())
-                .then(initPrescriptions())
-                .then(initAllergies())
-                .then(initVitals()));
-        };
-
-        function initVisitHistory() {
-            return encounterService.getEncountersOfPatient(patientUuid).success(function (data) {
-          vm.visits = dropSizeToLimit(commonService.filterGroupReverse(data));
-            });
-        };
-
-        function initLabResults() {
-            var labEncounterUuid = "e2790f68-1d5f-11e0-b929-000c29ad1d07";//TODO: create in configuration file
-
-            return encounterService.getEncountersForEncounterType(patientUuid, labEncounterUuid).success(function (data) {
-                vm.labs = commonService.filterGroupReverse(data);
-            });
-        };
-
-        function initDiagnosis() {
-            var concepts = ["e1cdd38c-1d5f-11e0-b929-000c29ad1d07",
-                "e1e2b07c-1d5f-11e0-b929-000c29ad1d07",
-                "e1d608cc-1d5f-11e0-b929-000c29ad1d07",
-                "e1e5232a-1d5f-11e0-b929-000c29ad1d07",
-                "e1e529a6-1d5f-11e0-b929-000c29ad1d07",
-                "e1d2984a-1d5f-11e0-b929-000c29ad1d07",
-                "e1dac2ae-1d5f-11e0-b929-000c29ad1d07",
-                "e1dac3da-1d5f-11e0-b929-000c29ad1d07",
-                "e1dac574-1d5f-11e0-b929-000c29ad1d07",
-                "e1e2530c-1d5f-11e0-b929-000c29ad1d07",
-                "e1e52898-1d5f-11e0-b929-000c29ad1d07",
-                "e1e29fa6-1d5f-11e0-b929-000c29ad1d07",
-                "e1daf922-1d5f-11e0-b929-000c29ad1d07",
-                "e1dce93a-1d5f-11e0-b929-000c29ad1d07"
-            ];//TODO: create in configuration file
-
-            return observationsService.findAll(patientUuid).success (function (data) {
-                var filtered = observationsService.filterByList(data.results, concepts);//TODO: filter must be dome in backend system
-                var ordered = _.sortBy(filtered, function (obs) {
-                    return obs.obsDatetime;
-                });
-                vm.diagnosis = dropSizeToLimit(ordered);
-            });
-        };
-
-        function initICD10Diagnosis() {
-            var concept = "e1eb7806-1d5f-11e0-b929-000c29ad1d07";//TODO: create in configuration file
-
-            return observationsService.get(patientUuid, concept).success (function (data) {
-                var filtered = commonService.filterRetired(data.results);//TODO: filter must be dome in backend system
-                vm.icdDiagnosis = dropSizeToLimit(filtered);
-            });
-        };
-
-        function initPharmacyPickups() {
-            var pharmacyEncounterUuid = "e279133c-1d5f-11e0-b929-000c29ad1d07";//TODO: create in configuration file
-
-            return encounterService.getEncountersForEncounterType(patientUuid, pharmacyEncounterUuid).success(function (data) {
-                vm.pickups = dropSizeToLimit(commonService.filterGroupReverse(data));
-            });
-        };
-
-        function initPharmacyPickupsNew() {
-            var patientUuid = $stateParams.patientUuid;
-            var pharmacyEncounterTypeUuid = "18fd49b7-6c2b-4604-88db-b3eb5b3a6d5f";
-
-            return encounterService.getEncountersForEncounterType(patientUuid, pharmacyEncounterTypeUuid).success(function (data) {
-                var nonRetired = prepareDispenses(commonService.filterReverse(data));
-                vm.newPickups = dropSizeToLimit(nonRetired);
-
-            });
-        };
-
-        var prepareDispenses = function (encounters) {
-
-            var dispenses = [];
-
-            _.forEach(encounters, function (encounter) {
-                var dispense = {};
-                dispense.detetime = encounter.encounterDatetime;
-                dispense.provider = encounter.provider;
-                dispense.items = [];
-                _.forEach(encounter.obs, function (obs) {
-
-                    if(obs.groupMembers){
-                      var item = {};
-                      item.order = obs.groupMembers[0].order;
-                      item.quantity = commonService.findByMemberConcept(obs.groupMembers, "e1de2ca0-1d5f-11e0-b929-000c29ad1d07");
-                      item.returnDate = commonService.findByMemberConcept(obs.groupMembers, "e1e2efd8-1d5f-11e0-b929-000c29ad1d07");
-
-                      dispense.items.push(item);
-                    }
-                });
-                dispenses.push(dispense);
-            });
-
-            return dispenses;
-        };
-        //TODO: Remove this duplicated function
-        function initPrescriptions() {
-          return prescriptionService.getAllPrescriptions($rootScope.patient).then(function (patientPrescriptions) {
-            vm.hasServiceToday = (hasActivePrescription(patientPrescriptions)) ? true : null;
-            vm.prescriptions = patientPrescriptions.reverse();
-            setPrescritpionItemStatus(vm.existingPrescriptions);
-          });
-        };
-
-        //TODO: Remove this duplicated function 
-        function hasActivePrescription(prescriptions){
-            return _.find(prescriptions, function (prescription) {
-                return prescription.prescriptionStatus == true;
-            });
-        };
-
-        //TODO: Remove this duplicated function
-        function setPrescritpionItemStatus(prescriptions){
-          _.forEach(prescriptions, function (prescription) {
-             _.forEach(prescription.prescriptionItems, function (item) {
-                  if(prescription.prescriptionStatus == true){
-                      if((item.drugOrder.action == 'NEW') ||(item.drugOrder.action == 'REVISE') ){
-                         item.status = "PHARMACY_ACTIVE";
-                      }
-                      else{
-                         item.status = "PHARMACY_FINALIZED";
-                      }
-                  }
-                  else{
-                    item.status = "PHARMACY_FINALIZED";
-                  }
-              });
-           });
-         };
-
-        function initAllergies() {
-            var concepts = ["e1e07ece-1d5f-11e0-b929-000c29ad1d07", "e1da757e-1d5f-11e0-b929-000c29ad1d07"];
-
-            var adultFollowupEncounterUuid = "e278f956-1d5f-11e0-b929-000c29ad1d07";//TODO: create in configuration file
-            var childFollowupEncounterUuid = "e278fce4-1d5f-11e0-b929-000c29ad1d07";//TODO: create in configuration file
-
-            var patient = commonService.deferPatient($rootScope.patient);
-
-            return encounterService.getEncountersForEncounterType(patient.uuid,
-            (patient.age.years >= 15) ? adultFollowupEncounterUuid : childFollowupEncounterUuid)
-                    .success(function (data) {
-                        vm.allergies = dropSizeToLimit(commonService.filterGroupReverseFollowupObs(concepts, data.results));
-
-            });
-        };
-
-        function initVitals() {
-            var concepts = ["e1e2e934-1d5f-11e0-b929-000c29ad1d07",
-                "e1e2e826-1d5f-11e0-b929-000c29ad1d07",
-                "e1da52ba-1d5f-11e0-b929-000c29ad1d07",
-                "e1e2e70e-1d5f-11e0-b929-000c29ad1d07",
-                "e1e2e3d0-1d5f-11e0-b929-000c29ad1d07"
-            ];//TODO: create in configuration file
-
-            var adultFollowupEncounterUuid = "e278f956-1d5f-11e0-b929-000c29ad1d07";//TODO: create in configuration file
-            var childFollowupEncounterUuid = "e278fce4-1d5f-11e0-b929-000c29ad1d07";//TODO: create in configuration file
-
-            var patient = commonService.deferPatient($rootScope.patient);
-
-            return encounterService.getEncountersForEncounterType(patient.uuid,
-            (patient.age.years >= 15) ? adultFollowupEncounterUuid : childFollowupEncounterUuid)
-                    .success(function (data) {
-                        vm.vitals = dropSizeToLimit(commonService.filterGroupReverseFollowupObs(concepts, data.results));
-
-            });
-        };
-
-        vm.isObject = function (value) {
-            return _.isObject(value);
-        };
-
-        vm.filterDate = function (obs) {
-            if (obs.concept.uuid === "892a98b2-9c98-4813-b4e5-0b434d14404d"
-                || obs.concept.uuid === "e1e2efd8-1d5f-11e0-b929-000c29ad1d07") {
-                return $filter('date')(obs.value, "MMM d, y");
+    function prepareDispenses(encounters) {
+
+      var dispenses = [];
+
+      _.forEach(encounters, function (encounter) {
+        var dispense = {};
+        dispense.detetime = encounter.encounterDatetime;
+        dispense.provider = encounter.provider;
+        dispense.items = [];
+        _.forEach(encounter.obs, function (obs) {
+
+          if(obs.groupMembers){
+            var item = {};
+            item.order = obs.groupMembers[0].order;
+            item.quantity = commonService.findByMemberConcept(obs.groupMembers, "e1de2ca0-1d5f-11e0-b929-000c29ad1d07");
+            item.returnDate = commonService.findByMemberConcept(obs.groupMembers, "e1e2efd8-1d5f-11e0-b929-000c29ad1d07");
+
+            dispense.items.push(item);
+          }
+        });
+        dispenses.push(dispense);
+      });
+
+      return dispenses;
+    }
+
+    //TODO: Remove this duplicated function
+    function initPrescriptions() {
+      return prescriptionService.getAllPrescriptions(patient).then(function (patientPrescriptions) {
+        vm.hasServiceToday = (hasActivePrescription(patientPrescriptions)) ? true : null;
+        vm.prescriptions = patientPrescriptions.reverse();
+        setPrescritpionItemStatus(vm.existingPrescriptions);
+      });
+    }
+
+    //TODO: Remove this duplicated function
+    function hasActivePrescription(prescriptions){
+      return _.find(prescriptions, function (prescription) {
+        return prescription.prescriptionStatus == true;
+      });
+    }
+
+    //TODO: Remove this duplicated function
+    function setPrescritpionItemStatus(prescriptions){
+      _.forEach(prescriptions, function (prescription) {
+        _.forEach(prescription.prescriptionItems, function (item) {
+          if(prescription.prescriptionStatus == true){
+            if((item.drugOrder.action == 'NEW') ||(item.drugOrder.action == 'REVISE') ){
+              item.status = "PHARMACY_ACTIVE";
+            }
+            else{
+              item.status = "PHARMACY_FINALIZED";
             }
+          }
+          else{
+            item.status = "PHARMACY_FINALIZED";
+          }
+        });
+      });
+    }
+
+    function initAllergies() {
+      var concepts = ["e1e07ece-1d5f-11e0-b929-000c29ad1d07", "e1da757e-1d5f-11e0-b929-000c29ad1d07"];
+
+      var adultFollowupEncounterUuid = "e278f956-1d5f-11e0-b929-000c29ad1d07";//TODO: create in configuration file
+      var childFollowupEncounterUuid = "e278fce4-1d5f-11e0-b929-000c29ad1d07";//TODO: create in configuration file
+
+      return encounterService.getEncountersForEncounterType(patient.uuid,
+        (patient.age.years >= 15) ? adultFollowupEncounterUuid : childFollowupEncounterUuid)
+        .success(function (data) {
+          vm.allergies = dropSizeToLimit(commonService.filterGroupReverseFollowupObs(concepts, data.results));
+
+        });
+    }
+
+    function initVitals() {
+      var concepts = ["e1e2e934-1d5f-11e0-b929-000c29ad1d07",
+        "e1e2e826-1d5f-11e0-b929-000c29ad1d07",
+        "e1da52ba-1d5f-11e0-b929-000c29ad1d07",
+        "e1e2e70e-1d5f-11e0-b929-000c29ad1d07",
+        "e1e2e3d0-1d5f-11e0-b929-000c29ad1d07"
+      ];//TODO: create in configuration file
+
+      var adultFollowupEncounterUuid = "e278f956-1d5f-11e0-b929-000c29ad1d07";//TODO: create in configuration file
+      var childFollowupEncounterUuid = "e278fce4-1d5f-11e0-b929-000c29ad1d07";//TODO: create in configuration file
 
-            return obs.value;
-        };
+      return encounterService.getEncountersForEncounterType(patient.uuid,
+        (patient.age.years >= 15) ? adultFollowupEncounterUuid : childFollowupEncounterUuid)
+        .success(function (data) {
+          vm.vitals = dropSizeToLimit(commonService.filterGroupReverseFollowupObs(concepts, data.results));
 
+        });
+    }
+
+    function isObject(value) {
+      return _.isObject(value);
     };
+
+    function filterDate(obs) {
+      if (obs.concept.uuid === "892a98b2-9c98-4813-b4e5-0b434d14404d"
+        || obs.concept.uuid === "e1e2efd8-1d5f-11e0-b929-000c29ad1d07") {
+        return $filter('date')(obs.value, "MMM d, y");
+      }
+
+      return obs.value;
+    };
+
+    function getPatient() {
+      return patientService.getPatient(patientUuid);
+    }
+
+  };
+
+})();
\ No newline at end of file
diff --git a/app/clinic/index.html b/app/clinic/index.html
index c20bbef..452e05b 100755
--- a/app/clinic/index.html
+++ b/app/clinic/index.html
@@ -199,7 +199,6 @@
 
       <script src="../patient-details/init.js"></script>
       <script src="../patient-details/controllers/patientDetailController.js"></script>
-      <script src="../patient-details/controllers/checkinController.js"></script>
       <script src="../patient-details/directives/addressFields.js"></script>
       <script src="../patient-details/directives/dynamicElementName.js"></script>
       <script src="../patient-details/filters/valueOfAddress.js"></script>
diff --git a/app/clinic/views/patient-consultation.html b/app/clinic/views/patient-consultation.html
index 19d6787..7376350 100755
--- a/app/clinic/views/patient-consultation.html
+++ b/app/clinic/views/patient-consultation.html
@@ -24,7 +24,7 @@
         <div class="panel-heading">
             <h3 class="panel-title">{{'COMMON_CLINIC_SERVICES_TITLE'| translate}}</h3>
         </div>
-      <clinical-services patient-uuid="patient.uuid"
+      <clinical-services patient-uuid="patientUUID"
                          services="clinicalServices"
                          service-forms="serviceForms"
                          has-visit-today="hasVisitToday"
diff --git a/app/clinic/views/patient-current.html b/app/clinic/views/patient-current.html
index 2b58094..13dc732 100755
--- a/app/clinic/views/patient-current.html
+++ b/app/clinic/views/patient-current.html
@@ -1,6 +1,6 @@
 <div class="row content-border-margin-regular">
   <div class="col-sm-6">
-    <div class="panel panel-primary panel-marginless-sides" ng-init="initVitals()">
+    <div class="panel panel-primary panel-marginless-sides" >
       <div class="panel-heading">
         <h3 class="panel-title">{{'CLINIC_PATIENT_VITALS' | translate}}</h3>
       </div>
@@ -16,7 +16,7 @@
     </div>
   </div>
   <div class="col-sm-6">
-    <div class="panel panel-primary panel-marginless-sides" ng-init="initLabResults()">
+    <div class="panel panel-primary panel-marginless-sides" >
       <div class="panel-heading">
         <h3 class="panel-title">{{'CLINIC_PATIENT_LAB' | translate}}</h3>
       </div>
diff --git a/app/clinic/views/patient-summary.html b/app/clinic/views/patient-summary.html
index 2733aac..9f74231 100755
--- a/app/clinic/views/patient-summary.html
+++ b/app/clinic/views/patient-summary.html
@@ -10,7 +10,7 @@
   </div>
 
     <div class="col-sm-6">
-      <div class="panel panel-primary panel-marginless-sides" ng-init="vm.initVisitHistory()"
+      <div class="panel panel-primary panel-marginless-sides"
            ng-click="showDivVisit=!showDivVisit">
             <div class="panel-heading">
                 <span ng-class="{'glyphicon glyphicon-chevron-down': showDivVisit, 'glyphicon glyphicon-chevron-up': !showDivVisit}" class="pull-right"></span><h3 class="panel-title">{{'CLINIC_PATIENT_VISIT_HISTORY' | translate}}</h3>
@@ -27,7 +27,7 @@
             </div>
         </div>
 
-        <div class="panel panel-primary panel-marginless-sides" ng-init="vm.initDiagnosis()"
+        <div class="panel panel-primary panel-marginless-sides"
            ng-click="showDivDiagnosis=!showDivDiagnosis">
             <div class="panel-heading">
                 <span ng-class="{'glyphicon glyphicon-chevron-down': showDivDiagnosis, 'glyphicon glyphicon-chevron-up': !showDivDiagnosis}" class="pull-right"></span><h3 class="panel-title">{{'CLINIC_PATIENT_DIAGNOSIS' | translate}}</h3>
@@ -43,7 +43,7 @@
             </table>
         </div>
 
-        <div class="panel panel-primary panel-marginless-sides" ng-init="vm.initICD10Diagnosis()"
+        <div class="panel panel-primary panel-marginless-sides"
            ng-click="showDivICD10Diagnosis=!showDivICD10Diagnosis">
             <div class="panel-heading">
                 <span ng-class="{'glyphicon glyphicon-chevron-down': showDivICD10Diagnosis, 'glyphicon glyphicon-chevron-up': !showDivICD10Diagnosis}" class="pull-right"></span><h3 class="panel-title">{{'CLINIC_PATIENT_DIAGNOSIS_ICD10' | translate}}</h3>
@@ -59,7 +59,7 @@
             </table>
         </div>
 
-      <div class="panel panel-primary panel-marginless-sides" ng-init="vm.initPrescriptions()"
+      <div class="panel panel-primary panel-marginless-sides"
            ng-click="showDivPrescriptions=!showDivPrescriptions">
             <div class="panel-heading">
                 <span ng-class="{'glyphicon glyphicon-chevron-down': showDivPrescriptions, 'glyphicon glyphicon-chevron-up': !showDivPrescriptions}" class="pull-right"></span><h3 class="panel-title">{{'CLINIC_PATIENT_PRESCRIPTIONS' | translate}}/{{'CLINIC_PATIENT_REGIMENS' | translate}}</h3>
@@ -100,7 +100,7 @@
             </div>
         </div>
 
-      <div class="panel panel-primary panel-marginless-sides" ng-init="vm.initVitals()"
+      <div class="panel panel-primary panel-marginless-sides"
            ng-click="showDivVitals=!showDivVitals">
             <div class="panel-heading">
                 <span ng-class="{'glyphicon glyphicon-chevron-down': showDivVitals, 'glyphicon glyphicon-chevron-up': !showDivVitals}" class="pull-right"></span><h3 class="panel-title">{{'CLINIC_PATIENT_VITALS' | translate}}</h3>
@@ -119,7 +119,7 @@
         </div>
     </div>
     <div class="col-sm-6">
-      <div class="panel panel-primary panel-marginless-sides" ng-init="vm.initLabResults()"
+      <div class="panel panel-primary panel-marginless-sides"
            ng-click="showDivLAB=!showDivLAB">
             <div class="panel-heading">
                 <span ng-class="{'glyphicon glyphicon-chevron-down': showDivLAB, 'glyphicon glyphicon-chevron-up': !showDivLAB}" class="pull-right"></span><h3 class="panel-title">{{'CLINIC_PATIENT_LAB' | translate}}</h3>
@@ -149,7 +149,7 @@
             </div>
         </div>
 
-        <div class="panel panel-primary panel-marginless-sides" ng-init="vm.initPharmacyPickups()"
+        <div class="panel panel-primary panel-marginless-sides"
                ng-click="showDivPharmacy=!showDivPharmacy">
             <div class="panel-heading">
                 <span ng-class="{'glyphicon glyphicon-chevron-down': showDivPharmacy, 'glyphicon glyphicon-chevron-up': !showDivPharmacy}" class="pull-right"></span><h3 class="panel-title">{{'CLINIC_PATIENT_PHARMACY_ARV' | translate}}</h3>
@@ -167,7 +167,7 @@
             </div>
           </div>
 
-          <div class="panel panel-primary panel-marginless-sides" ng-init="vm.initPharmacyPickupsNew()"
+          <div class="panel panel-primary panel-marginless-sides"
                ng-click="showDivPharmacyNew=!showDivPharmacyNew">
             <div class="panel-heading">
                 <span ng-class="{'glyphicon glyphicon-chevron-down': showDivPharmacyNew, 'glyphicon glyphicon-chevron-up': !showDivPharmacyNew}" class="pull-right"></span><h3 class="panel-title">{{'CLINIC_PATIENT_PHARMACY' | translate}}</h3>
@@ -186,7 +186,7 @@
             </div>
           </div>
 
-      <div class="panel panel-primary panel-marginless-sides" ng-init="vm.initAllergies()"
+      <div class="panel panel-primary panel-marginless-sides"
            ng-click="showDivAllergies=!showDivAllergies">
             <div class="panel-heading">
                 <span ng-class="{'glyphicon glyphicon-chevron-down': showDivAllergies, 'glyphicon glyphicon-chevron-up': !showDivAllergies}" class="pull-right"></span><h3 class="panel-title">{{'CLINIC_PATIENT_ALLERGIES' | translate}}/{{'CLINIC_PATIENT_SIDE_EFFECTS' | translate}}</h3>
diff --git a/app/common/patient/header/views/header.html b/app/common/patient/header/views/header.html
index c697cd3..6135523 100755
--- a/app/common/patient/header/views/header.html
+++ b/app/common/patient/header/views/header.html
@@ -1,5 +1,5 @@
 <div class="row bg-info-border bg-info content-border border-rouded-top" ng-controller="PatientHeaderController"><!--patient header -->
-    <div class="col-md-6" ng-controller="CheckinController as checkin">
+    <div class="col-md-6">
         <div class="header-text-lg">
             <b>{{patient.fullName}}</b>
         </div>
@@ -9,13 +9,13 @@
             </span>
             <span>{{patient.age.years}}</span>
             <span>{{patient.birthdateEstimated ? '~': ''}}({{patient.birthdate | date:"MM/dd/yyyy"}})</span>
-            <!-- TODO: must check "Header Attribute Types" from openmrs configurations --> 
+            <!-- TODO: must check "Header Attribute Types" from openmrs configurations -->
             <span ng-if="patient['Numero de Telefone']">Phone number: {{patient['Numero de Telefone']}}</span>
         </div>
     </div>
     <div class="col-md-6 pull-right go-to-right">
         <ul class="list-unstyled">
-            <li  ng-repeat="identifier in patient.identifiers" 
+            <li  ng-repeat="identifier in patient.identifiers"
                  ng-class="{'header-text-lg' : identifier.preferred}">
                 {{identifier.identifierType.display}}: <b>{{identifier.identifier}}</b>
             </li>
diff --git a/app/common/prescription/controllers/patientSimplifiedPrescriptionController.js b/app/common/prescription/controllers/patientSimplifiedPrescriptionController.js
index cb5ff7a..d88a1fb 100755
--- a/app/common/prescription/controllers/patientSimplifiedPrescriptionController.js
+++ b/app/common/prescription/controllers/patientSimplifiedPrescriptionController.js
@@ -7,17 +7,18 @@
 
   PatientSimplifiedPrescriptionController.$inject = ['$http', '$filter', '$rootScope', '$stateParams',
     'observationsService', 'commonService', 'conceptService', 'localStorageService', 'notifier', 'spinner',
-    'drugService', 'prescriptionService', 'providerService', 'sessionService'];
+    'drugService', 'prescriptionService', 'providerService', 'sessionService', 'patientService'];
 
   /* @ngInject */
   function PatientSimplifiedPrescriptionController($http, $filter, $rootScope, $stateParams, observationsService,
                                                    commonService, conceptService, localStorageService, notifier, spinner,
-                                                   drugService, prescriptionService, providerService, sessionService) {
+                                                   drugService, prescriptionService, providerService, sessionService,
+                                                   patientService) {
 
 
     var drugMapping = $rootScope.drugMapping;
     var patientUuid;
-    var patient = $rootScope.patient;
+    var patient = {};
 
     var vm = this;
     vm.allRegimes = [];
@@ -74,6 +75,7 @@
             return element.uuid === fieldModel.uuid;
           });
         }
+        return true;
       }
 
       //also get the available regimens here for later
@@ -86,11 +88,20 @@
 
       var load = conceptService.getPrescriptionConvSetConcept()
         .then(setFieldModels)
-        .then(loadSavedPrescriptions(patient))
+        .then(function (z) {
+          return patientService.getPatient($stateParams.patientUuid)
+        })
+        .then(function (p) {
+          patient = p;
+          return loadSavedPrescriptions(patient);
+        })
         .then(loadAllRegimes())
         .then(getCurrentProvider)
         .then(function (currentProvider) {
           vm.selectedProvider = currentProvider;
+        })
+        .catch(function () {
+          notifier.error($filter('translate')('COMMON_ERROR'));
         });
 
       spinner.forPromise(load);
@@ -227,7 +238,10 @@
 
 
     function getProviders() {
-      return providerService.getProviders();
+      return providerService.getProviders()
+        .catch(function () {
+          notifier.error($filter('translate')('COMMON_ERROR'));
+        });
     }
 
     function getCurrentProvider() {
diff --git a/app/patient-details/controllers/checkinController.js b/app/patient-details/controllers/checkinController.js
deleted file mode 100755
index 22cbbac..0000000
--- a/app/patient-details/controllers/checkinController.js
+++ /dev/null
@@ -1,34 +0,0 @@
-'use strict';
-
-angular.module('patient.details')
-        .controller('CheckinController', CheckinController);
-
-CheckinController.$inject = ['$rootScope', 'visitService', 'commonService','$stateParams'];
-
-function CheckinController($rootScope, visitService, commonService, $stateParams) {
-    //TODO: Check if vm is needed
-    var vm = this;
-    var dateUtil = Bahmni.Common.Util.DateUtil;
-
-    (function () {
-        //initialize visit info in scope
-        visitService.search({patient: $stateParams.patientUuid, v: "full"})
-            .success(function (data) {
-                var nonRetired = commonService.filterRetired(data.results);
-                //in case the patient has an active visit
-                if (!_.isEmpty(nonRetired)) {
-                    var lastVisit = _.maxBy(nonRetired, 'startDatetime');
-                    var now = dateUtil.now();
-                    //is last visit todays
-                    if (dateUtil.parseDatetime(lastVisit.startDatetime) <= now &&
-                        dateUtil.parseDatetime(lastVisit.stopDatetime) >= now) {
-                        $rootScope.hasVisitToday = true;
-                        $rootScope.todayVisit = lastVisit;
-                    } else {
-                        $rootScope.hasVisitToday = false;
-                    }
-                }
-        });
-
-    })();
-}
diff --git a/app/pharmacy/controllers/dashboardController.js b/app/pharmacy/controllers/dashboardController.js
index dd8a056..6655d03 100755
--- a/app/pharmacy/controllers/dashboardController.js
+++ b/app/pharmacy/controllers/dashboardController.js
@@ -23,8 +23,6 @@
     function activate() {
       patientService.getPatient(patientUuid).then(function (patient) {
         vm.patient = patient;
-        // This is needed because its tied to CheckinController.
-        $rootScope.patient = vm.patient;
       });
     }
 
diff --git a/app/pharmacy/index.html b/app/pharmacy/index.html
index 7361da5..735495a 100755
--- a/app/pharmacy/index.html
+++ b/app/pharmacy/index.html
@@ -189,7 +189,6 @@
 
       <script src="../patient-details/init.js"></script>
       <script src="../patient-details/controllers/patientDetailController.js"></script>
-      <script src="../patient-details/controllers/checkinController.js"></script>
       <script src="../patient-details/directives/addressFields.js"></script>
       <script src="../patient-details/directives/dynamicElementName.js"></script>
       <script src="../patient-details/filters/valueOfAddress.js"></script>
diff --git a/app/registration/index.html b/app/registration/index.html
index ddc652b..c83b8ec 100755
--- a/app/registration/index.html
+++ b/app/registration/index.html
@@ -187,7 +187,6 @@
 
       <script src="../patient-details/init.js"></script>
       <script src="../patient-details/controllers/patientDetailController.js"></script>
-      <script src="../patient-details/controllers/checkinController.js"></script>
       <script src="../patient-details/directives/addressFields.js"></script>
       <script src="../patient-details/directives/dynamicElementName.js"></script>
       <script src="../patient-details/filters/valueOfAddress.js"></script>
diff --git a/app/service-form/init.js b/app/service-form/init.js
index 7d671c4..39695a6 100755
--- a/app/service-form/init.js
+++ b/app/service-form/init.js
@@ -1 +1 @@
-angular.module('serviceform', ['poc.common.formdisplay']);
\ No newline at end of file
+angular.module('serviceform', ['poc.common.formdisplay', 'bahmni.common.uiHelper']);
\ No newline at end of file
diff --git a/app/social/controllers/dashboardController.js b/app/social/controllers/dashboardController.js
index 9736af5..ac3cd00 100755
--- a/app/social/controllers/dashboardController.js
+++ b/app/social/controllers/dashboardController.js
@@ -1,24 +1,54 @@
-'use strict';
+(function () {
+  'use strict';
 
-angular.module('social')
-        .controller('DashboardController', ["$rootScope", "$scope", "$location", "$stateParams", "patientService", function ($rootScope, $scope, $location, $stateParams, patientService) {
-            var patientUuid;
+  angular
+    .module('social')
+    .controller('DashboardController', DashboardController);
 
-            init();
+  DashboardController.$inject = ['$rootScope', '$scope', '$location', '$stateParams', 'patientService', 'visitService',
+    'commonService'];
 
-            function init() {
-                patientUuid = $stateParams.patientUuid;
+  /* @ngInject */
+  function DashboardController($rootScope, $scope, $location, $stateParams, patientService, visitService, commonService) {
 
-                patientService.getPatient(patientUuid).then(function (patient) {
-                    $rootScope.patient = patient;
-                });
+    var dateUtil = Bahmni.Common.Util.DateUtil;
+
+    $scope.patientUuid = $stateParams.patientUuid;
+
+    activate();
+
+    ////////////////
+
+    function activate() {
+      patientService.getPatient($scope.patientUuid).then(function (patient) {
+        $scope.patient = patient;
+      });
+      visitService.search({patient: $scope.patientUuid, v: "full"})
+        .success(function (data) {
+          var nonRetired = commonService.filterRetired(data.results);
+          //in case the patient has an active visit
+          if (!_.isEmpty(nonRetired)) {
+            var lastVisit = _.maxBy(nonRetired, 'startDatetime');
+            var now = dateUtil.now();
+            //is last visit todays
+            if (dateUtil.parseDatetime(lastVisit.startDatetime) <= now &&
+              dateUtil.parseDatetime(lastVisit.stopDatetime) >= now) {
+              $scope.hasVisitToday = true;
+              $scope.todayVisit = lastVisit;
+            } else {
+              $scope.hasVisitToday = false;
             }
+          }
+        });
+    }
+
+    $scope.linkSearch = function() {
+      $location.url("/search"); // path not hash
+    };
 
-            $scope.linkSearch = function() {
-                $location.url("/search"); // path not hash
-            };
+    $scope.linkPatientDetail = function() {
+      $location.url("/patient/detail/" + $scope.patientUuid); // path not hash
+    };
+  }
 
-            $scope.linkPatientDetail = function() {
-                $location.url("/patient/detail/" + patientUuid); // path not hash
-            };
-        }]);
+})();
diff --git a/app/social/index.html b/app/social/index.html
index 730f6c2..456537d 100755
--- a/app/social/index.html
+++ b/app/social/index.html
@@ -183,7 +183,6 @@
 
       <script src="../patient-details/init.js"></script>
       <script src="../patient-details/controllers/patientDetailController.js"></script>
-      <script src="../patient-details/controllers/checkinController.js"></script>
       <script src="../patient-details/directives/addressFields.js"></script>
       <script src="../patient-details/directives/dynamicElementName.js"></script>
       <script src="../patient-details/filters/valueOfAddress.js"></script>
diff --git a/app/social/views/dashboard.html b/app/social/views/dashboard.html
index 2e3b183..e0cadec 100755
--- a/app/social/views/dashboard.html
+++ b/app/social/views/dashboard.html
@@ -18,7 +18,7 @@
         <div class="panel-heading">
             <h3 class="panel-title">{{'COMMON_CLINIC_SERVICES_TITLE'| translate}}</h3>
         </div>
-        <clinical-services patient-uuid="patient.uuid"
+        <clinical-services patient-uuid="patientUuid"
                            services="clinicalServices"
                            service-forms="serviceForms"
                            has-visit-today="hasVisitToday"
diff --git a/app/vitals/controllers/dashboardController.js b/app/vitals/controllers/dashboardController.js
index 3fdff0a..82e182d 100755
--- a/app/vitals/controllers/dashboardController.js
+++ b/app/vitals/controllers/dashboardController.js
@@ -1,24 +1,54 @@
-'use strict';
+(function () {
+  'use strict';
 
-angular.module('vitals')
-        .controller('DashboardController', ["$rootScope", "$scope", "$location", "$stateParams", "patientService", function ($rootScope, $scope, $location, $stateParams, patientService) {
-            var patientUuid;
+  angular
+    .module('vitals')
+    .controller('DashboardController', DashboardController);
 
-            init();
+  DashboardController.$inject = ['$rootScope', '$scope', '$location', '$stateParams', 'patientService', 'visitService',
+    'commonService'];
 
-            function init() {
-                patientUuid = $stateParams.patientUuid;
+  /* @ngInject */
+  function DashboardController($rootScope, $scope, $location, $stateParams, patientService, visitService, commonService) {
 
-                patientService.getPatient(patientUuid).then(function (patient) {
-                    $rootScope.patient = patient;
-                });
+    var dateUtil = Bahmni.Common.Util.DateUtil;
+
+    $scope.patientUUID = $stateParams.patientUuid;
+
+    activate();
+
+    ////////////////
+
+    function activate() {
+       patientService.getPatient($scope.patientUUID).then(function (patient) {
+        $rootScope.patient = patient;
+      });
+       visitService.search({patient: $scope.patientUuid, v: "full"})
+        .success(function (data) {
+          var nonRetired = commonService.filterRetired(data.results);
+          //in case the patient has an active visit
+          if (!_.isEmpty(nonRetired)) {
+            var lastVisit = _.maxBy(nonRetired, 'startDatetime');
+            var now = dateUtil.now();
+            //is last visit todays
+            if (dateUtil.parseDatetime(lastVisit.startDatetime) <= now &&
+              dateUtil.parseDatetime(lastVisit.stopDatetime) >= now) {
+              $scope.hasVisitToday = true;
+              $scope.todayVisit = lastVisit;
+            } else {
+              $scope.hasVisitToday = false;
             }
+          }
+        });
+    }
+
+    $scope.linkSearch = function() {
+      $location.url("/search"); // path not hash
+    };
 
-            $scope.linkSearch = function() {
-                $location.url("/search"); // path not hash
-            };
+    $scope.linkPatientDetail = function() {
+      $location.url("/patient/detail/" + patientUuid); // path not hash
+    };
+  }
 
-            $scope.linkPatientDetail = function() {
-                $location.url("/patient/detail/" + patientUuid); // path not hash
-            };
-        }]);
+})();
diff --git a/app/vitals/index.html b/app/vitals/index.html
index 98ce755..fc25025 100755
--- a/app/vitals/index.html
+++ b/app/vitals/index.html
@@ -180,7 +180,6 @@
 
       <script src="../patient-details/init.js"></script>
       <script src="../patient-details/controllers/patientDetailController.js"></script>
-      <script src="../patient-details/controllers/checkinController.js"></script>
       <script src="../patient-details/directives/addressFields.js"></script>
       <script src="../patient-details/directives/dynamicElementName.js"></script>
       <script src="../patient-details/filters/valueOfAddress.js"></script>
diff --git a/app/vitals/init.js b/app/vitals/init.js
index 9b5b241..6ed89bf 100755
--- a/app/vitals/init.js
+++ b/app/vitals/init.js
@@ -1,28 +1,28 @@
 angular
   .module('vitals',
     [
-      'ngRoute',
-      'ngCookies',
-      'ui.router',
-      'smart-table',
-      'bahmni.common.uiHelper',
+      'application',
+      'bahmni.common.appFramework',
       'bahmni.common.config',
       'bahmni.common.domain',
-      'bahmni.common.appFramework',
-      'LocalStorageModule',
+      'bahmni.common.i18n',
+      'bahmni.common.uicontrols.programmanagment',
+      'bahmni.common.uiHelper',
+      'common.patient',
       'datePicker',
       'frapontillo.bootstrap-switch',
-      'bahmni.common.uicontrols.programmanagment',
-      'serviceform',
-      'ui.checkbox',
-      'application',
+      'LocalStorageModule',
+      'ngCookies',
+      'ngDialog',
       'ngMessages',
-      'poc.common.clinicalservices',
-      'common.patient',
+      'ngRoute',
       'pascalprecht.translate',
-      'bahmni.common.i18n',
       'patient.details',
-      'ngDialog'
+      'poc.common.clinicalservices',
+      'serviceform',
+      'smart-table',
+      'ui.checkbox',
+      'ui.router',
     ]
   );
 //to be initialized by config inside app.js
diff --git a/app/vitals/views/dashboard.html b/app/vitals/views/dashboard.html
index ac29d9f..b4290f1 100755
--- a/app/vitals/views/dashboard.html
+++ b/app/vitals/views/dashboard.html
@@ -20,7 +20,7 @@
         <div class="panel-heading">
             <h3 class="panel-title">{{'COMMON_CLINIC_SERVICES_TITLE'| translate}}</h3>
         </div>
-        <clinical-services patient-uuid="patient.uuid"
+        <clinical-services patient-uuid="patientUUID"
                            services="clinicalServices"
                            service-forms="serviceForms"
                            has-visit-today="hasVisitToday"
-- 
2.7.4

