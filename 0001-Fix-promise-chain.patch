From 0303f5cbb769c22d623e909ef3bcd73345824146 Mon Sep 17 00:00:00 2001
From: Yassin Nurmahomed <yassin.nurmahomed@ucglobalprograms.org>
Date: Wed, 16 Aug 2017 18:34:31 +0200
Subject: [PATCH 1/3] Fix promise chain

FormLoader.load returns promise, properly return this promise so chaining works correctly
and we can be sure that forms finished loading after initialization.
---
 app/clinic/initialization.js       |  2 +-
 app/pharmacy/initialization.js     |  2 +-
 app/registration/initialization.js | 14 +++++++-------
 app/social/initialization.js       | 12 ++++++------
 app/vitals/initialization.js       | 12 ++++++------
 5 files changed, 21 insertions(+), 21 deletions(-)

diff --git a/app/clinic/initialization.js b/app/clinic/initialization.js
index 5509eba..19ff52d 100755
--- a/app/clinic/initialization.js
+++ b/app/clinic/initialization.js
@@ -19,7 +19,7 @@ angular.module('clinic').factory('initialization',
         };
 
         var initForms = function () {
-           formLoader.load(appService.getAppDescriptor().getClinicalServices()).then(function (data) {
+           return formLoader.load(appService.getAppDescriptor().getClinicalServices()).then(function (data) {
                $rootScope.serviceForms = data;
            });
         };
diff --git a/app/pharmacy/initialization.js b/app/pharmacy/initialization.js
index 360f394..bc2793f 100755
--- a/app/pharmacy/initialization.js
+++ b/app/pharmacy/initialization.js
@@ -19,7 +19,7 @@ angular.module('pharmacy').factory('initialization',
         };
 
         var initForms = function () {
-           formLoader.load(appService.getAppDescriptor().getClinicalServices()).then(function (data) {
+           return formLoader.load(appService.getAppDescriptor().getClinicalServices()).then(function (data) {
                $rootScope.serviceForms = data;
            });
         };
diff --git a/app/registration/initialization.js b/app/registration/initialization.js
index 2a7449c..52dd1b3 100755
--- a/app/registration/initialization.js
+++ b/app/registration/initialization.js
@@ -17,17 +17,17 @@ angular.module('registration').factory('initialization',
                 $rootScope.appId = appService.getAppDescriptor().getId();
             });
         };
-        
+
         var initForms = function () {
-           formLoader.load(appService.getAppDescriptor().getClinicalServices()).then(function (data) {
+           return formLoader.load(appService.getAppDescriptor().getClinicalServices()).then(function (data) {
                $rootScope.serviceForms = data;
            });
         };
-        
+
         var initClinicalServices = function () {
             $rootScope.clinicalServices = appService.getAppDescriptor().getClinicalServices();
         };
-        
+
         var initFormLayout = function () {
             $rootScope.formLayout = appService.getAppDescriptor().getFormLayout();
         };
@@ -35,10 +35,10 @@ angular.module('registration').factory('initialization',
         var initApp = function() {
             appService.initApp('registration', {'app': true, 'extension' : true, 'service': true });
         };
-        
-        var loadUser = function () {       
+
+        var loadUser = function () {
             var currentUser = $cookies.get(Bahmni.Common.Constants.currentUser);
-            
+
             return userService.getUser(currentUser).success(function(data) {
                 $rootScope.currentUser = data.results[0];
             });
diff --git a/app/social/initialization.js b/app/social/initialization.js
index eba7ff2..471bb97 100755
--- a/app/social/initialization.js
+++ b/app/social/initialization.js
@@ -17,17 +17,17 @@ angular.module('social').factory('initialization',
                 $rootScope.appId = appService.getAppDescriptor().getId();
             });
         };
-        
+
         var initForms = function () {
-           formLoader.load(appService.getAppDescriptor().getClinicalServices()).then(function (data) {
+           return formLoader.load(appService.getAppDescriptor().getClinicalServices()).then(function (data) {
                $rootScope.serviceForms = data;
            });
         };
-        
+
         var initClinicalServices = function () {
             $rootScope.clinicalServices = appService.getAppDescriptor().getClinicalServices();
         };
-        
+
         var initFormLayout = function () {
             $rootScope.formLayout = appService.getAppDescriptor().getFormLayout();
         };
@@ -35,10 +35,10 @@ angular.module('social').factory('initialization',
         var initApp = function() {
             return appService.initApp('social', {'app': true, 'extension' : true, 'service': true });
         };
-        
+
         var loadUser = function () {
             var currentUser = $cookies.get(Bahmni.Common.Constants.currentUser);
-            
+
             return userService.getUser(currentUser).success(function(data) {
                 $rootScope.currentUser = data.results[0];
             });
diff --git a/app/vitals/initialization.js b/app/vitals/initialization.js
index 9ebbf17..f1355e5 100755
--- a/app/vitals/initialization.js
+++ b/app/vitals/initialization.js
@@ -17,17 +17,17 @@ angular.module('vitals').factory('initialization',
                 $rootScope.appId = appService.getAppDescriptor().getId();
             });
         };
-        
+
         var initForms = function () {
-           formLoader.load(appService.getAppDescriptor().getClinicalServices()).then(function (data) {
+           return formLoader.load(appService.getAppDescriptor().getClinicalServices()).then(function (data) {
                $rootScope.serviceForms = data;
            });
         };
-        
+
         var initClinicalServices = function () {
             $rootScope.clinicalServices = appService.getAppDescriptor().getClinicalServices();
         };
-        
+
         var initFormLayout = function () {
             $rootScope.formLayout = appService.getAppDescriptor().getFormLayout();
         };
@@ -35,10 +35,10 @@ angular.module('vitals').factory('initialization',
         var initApp = function() {
             return appService.initApp('vitals', {'app': true, 'extension' : true, 'service': true });
         };
-        
+
         var loadUser = function () {
             var currentUser = $cookies.get(Bahmni.Common.Constants.currentUser);
-            
+
             return userService.getUser(currentUser).success(function(data) {
                 $rootScope.currentUser = data.results[0];
             });
-- 
2.7.4

